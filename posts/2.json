{
	"id":"2",
	"author":"mvpspl619",
	"title":"Second Post",
	"directLink":"second-post",
	"content":"##Dynamic Navigation(Most unsuited name)\r\n\r\n\r\n\r\nAn AngularJS directive that solves one and only one problem. \r\n\r\n\r\n\r\n**You:** What's that problem dude?\r\n\r\n\r\n\r\n**Me:** Alright. How do you maintain consistent state on your menu items as the user navigates to a particular route ? You gotta write your own code to put an active page's menu item in a particular state(mostly done by applying a CSS class once the menu-item is clicked on non dynamic pages).\r\n\r\n\r\n\r\n**Me again:** This directive solves that problem by exposing a simple api as below. <br >\r\n\r\n**Me**. You're welcome! ;)\r\n\r\n\r\n\r\n![NavItemDirective](https://raw.githubusercontent.com/mvpspl619/angular-dynamic-navigation/master/demo.png)\r\n\r\n\r\n\r\n###How does it work ?\r\n\r\nThe directive watches **$location.path()** and when the current path matches the value given in the attribute **nav-item-route**, a class name provided under attribute **nav-item-class** is added to the element that the directive is on.\r\n\r\n\r\n\r\n###How do I use it ?\r\n\r\n 1. Get the bower package \"Dynamic-Navigation\"\r\n\r\n 2. Add it as a dependency to your AngularJS module\r\n\r\n 3. On your navigation menu item, add the directive **nav-item** as an attribute and two other attributes **nav-item-class** and **nav-item-route**, assign them proper values."
}